on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: Build realtime

jobs:
  test-build-realtime:
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v1
      - uses: r-lib/actions/setup-pandoc@v1
      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}
      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          install.packages("pkgdown", type = "binary")
        shell: Rscript {0}

      - name: Install package
        run: R CMD INSTALL .

      # This cache contains the downloaded files as of the last date it was
      # invalidated. To invalidate again and keep previous values, increment
      # both key and restore-keys. To invalidate and completely reload files
      # (adds 60 minutes to build time), increment key and set restore-keys
      # to the same value.
      - name: Cache BSRTO downloads
        uses: actions/cache@v2
        with:
          path: ${{ runner.temp }}/bsrto-cache-dir
          restore-keys: bsrto-cache-dir-3
          key: bsrto-cache-dir-4

      # This cache saves ~20 minutes of build time but needs to be invalidated
      # manually when the raw read_() functions are updated. These functions are
      # written in such a way that they shouldn't need to be updated frequently.
      - name: Cache built raw data
        uses: actions/cache@v2
        with:
          path: ${{ runner.temp }}/bsrto-build-cache-dir
          key: bsrto-build-cache-dir-5

      - name: Build updated data
        env:
          R_BSRTO_CACHE: ${{ runner.temp }}/bsrto-cache-dir
          R_BSRTO_BUILD_CACHE: ${{ runner.temp }}/bsrto-build-cache-dir
          R_BSRTO_FTP_SERVER: ${{ secrets.BSRTO_FTP_SERVER_ADDRESS }}
        run: |
          bsrto::bs_build_realtime("built")
          navigator_file <- bsrto::bs_build_navigator("built")
          bsrto::bs_check_navigator(navigator_file)

        shell: Rscript {0}

      - name: Upload build cache
        if: always()
        uses: actions/upload-artifact@main
        with:
          name: bsrto-build-cache
          path: ${{ runner.temp }}/bsrto-build-cache-dir

      - name: Upload built data
        if: always()
        uses: actions/upload-artifact@main
        with:
          name: bsrto-built
          path: built
